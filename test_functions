JAVA

Factorial
Input: 5
Output: 120


import java.util.Scanner;
 
class Factorial
{
   public static void main(String args[])
   {
      int n, c, fact = 1;
 
      Scanner in = new Scanner(System.in);
 
      n = in.nextInt();
 
      if ( n < 0 )
         System.out.println("Number should be non-negative.");
      else
      {
         for ( c = 1 ; c <= n ; c++ )
            fact = fact*c;
 
         System.out.println(fact);
      }
   }
}



==============================================================================
Program that reverses a string
// Input: sir
// Output: ris
import java.util.*;
 
class ReverseString
{
   public static void main(String args[])
   {
      String original, reverse = "";
      Scanner in = new Scanner(System.in);
 
      original = in.nextLine();
 
      int length = original.length();
 
      for ( int i = length - 1 ; i >= 0 ; i-- )
         reverse = reverse + original.charAt(i);
 
      System.out.println(reverse);
   }
}

============================================================================
Program determines if an entered string is a palindrome or not.
// Input: madam
// Output: Entered string is a palindrome.

import java.util.*;
 
class Palindrome
{
   public static void main(String args[])
   {
      String original, reverse="";
      Scanner in = new Scanner(System.in);
 
      original = in.nextLine();
 
      int length = original.length();
 
      for ( int i = length - 1 ; i >= 0 ; i-- )
         reverse = reverse + original.charAt(i);
 
      if (original.equals(reverse))
         System.out.println("Entered string is a palindrome.");
      else
         System.out.println("Entered string is not a palindrome.");
 
   }
}	

example: "madam" is a palindrome



===============================================================================
Create an array and write a program that reverses elements of the array.

import java.util.ArrayList;
import java.util.Collections;
 
public class ReverseOrderArrayListExample {
 
  public static void main(String[] args) {
 
    //create an ArrayList object
    ArrayList arrayList = new ArrayList();
   
    //Add elements to Arraylist
    arrayList.add("A");
    arrayList.add("B");
    arrayList.add("C");
    arrayList.add("D");
    arrayList.add("E");
   
    System.out.println("Before Reverse Order, ArrayList Contains : " + arrayList);
   
    /*
      To reverse the order of all elements of Java ArrayList use,
      static void reverse(List list) method of Collections class.
     
      This method reverse the order of elements of specified list.
    */
   
    Collections.reverse(arrayList);
   
    System.out.println("After Reverse Order, ArrayList Contains : " + arrayList);
   
  }
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
C++

// Purpose:   A program that converts gallons to liters
// Input: 2 (gallons) Output: Liters:  7.5708 

#include <iostream>
using namespace std;

int main()
{
  float gallons, liters;

  cin >> gallons; // Read the inputs from the user

  liters = gallons * 3.7854; // convert to liters

  cout << "Liters: " << liters << endl; 

  return 0;
}

==============================================================================
// A program that finds factorial of a positive integer
// Input: 4 Output: 24 

#include<iostream>

using namespace std;

int main()

{

    int num,factorial=1;

    cin>>num;

    for(int a=1;a<=num;a++)

    {

        factorial=factorial*a;

    }

cout<<"Factorial of Given Number is ="<<factorial<<endl;

    return 0;

}


===============================================================================

// A program to find the Area and Perimeter of a Rectangle:

// Input: 20 3 
// Output:60 46


#include<iostream>

using namespace std;

int main()

{

    int width,height,area,perimeter;

    cin>>width;

    cin>>height;

    area=height*width;

    cout<<area<<endl;

    perimeter=2*(height+width);

cout<<" "<<perimeter<<endl;

return 0;

}

=============================================================================
// A program that converts a positive integer to binary.
// Input: 4
// Output: 100

#include<iostream>
#include <stdio.h>
using namespace std;

int main()
{
  int n,x,a, c, k;

  cin>>x;
  n=x;
  cout<<"Binary Value OF Given Number Is: ";

 for( a=1;n!=0;a++)

  {
     n=n/2;

  }

a=a-2;
  for (c = a; c >= 0; c--)
  {
    k = x >> c;

    if (k & 1)
      cout<<"1";
    else
      cout<<"0";
  }

  return 0;
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Python test functions
==============================================================================
# Finding the 7th fibonacci number
# Input: 7
# Output: 13

def fibonacci( n ):

   if n == 0 or n == 1:  # base case
      return n
   else:

      # two recursive calls
      return fibonacci( n - 1 ) + fibonacci( n - 2 )

number = int( raw_input( "Enter an integer: " ) )

if number > 0:
   result = fibonacci( number )
   print "Fibonacci(%d) = %d" % ( number, result )
else:
   print "Cannot find the fibonacci of a negative number"


==================================================================
# Find the highest number in an entered array list.
# Input: [2,4,6,3,32,22,0]
# Output: 32

def Maximum_Number(arr):
    biggest = arr[0]
    i = 1
    if len(arr) != 0:
        while i < len(arr):
            if arr[i] > biggest:
                biggest = arr[i]
            i += 1

        print('Maximum value from the list is %d' %biggest)

    else:
        return None


===============================================================================
##Is the entered positive integer prime?

# Input: 6
# Output: 6 is not a prime number, 2 times 3 is 6.



def isPrime(num):
    # prime numbers are greater than 1
    if num > 1:
       # check for factors
       for i in range(2,num):
           if (num % i) == 0:
               print(num,"is not a prime number")
               print(i,"times",num//i,"is",num)
               break
           else:
               print(num,"is a prime number")
       
    # if input number is less than
    # or equal to 1, it is not prime
    else:
       print(num,"is not a prime number")

===============================================================================
#Sort a list.
# Input: [72,2,14,6,64,5]
#Output: [2,5,6,14,64,72]

def insertion_sort(list2):
    for i in range(1, len(list2)):
        save = list2[i]
        j = i
        while j > 0 and list2[j - 1] > save:
            list2[j] = list2[j - 1]
            j -= 1
        list2[j] = save
    return list2

example: [4,56,8,2,24,14,6] ===> [1,2,4,6,8,14,24,56]



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
PHP

Odd or Even 
Checks if the number 5 is odd or even

<?php

function checkNumber($num)
{
	return ($num % 2);
}

$num = 5;

if(checkNumber($num))
{
	echo 'Odd number';
} else{
	echo 'Even number';
}
?>

===============================================================================
Square root of an integer
// Input: 9
// Output : 3

<?php
function square_root($square) {
    while ($i < $square) {
        if ($i*$i == $square) {
            $square_root = $i;
        }
        $i++;
    }
    
    if (!$square_root) {
        $square_root = "Square root is not int";
    }
    return $square_root;
}
?>

==============================================================================
Finds mode,median,range.
// Input: $arr = array(12,33,41,4,20,124,4,2); 
// Output: mean: 30
                median: 12
                mode: 4

<?php 
function mmmr($array, $output = 'mean'){ 
    if(!is_array($array)){ 
        return FALSE; 
    }else{ 
        switch($output){ 
            case 'mean': 
                $count = count($array); 
                $sum = array_sum($array); 
                $total = $sum / $count; 
            break; 
            case 'median': 
                rsort($array); 
                $middle = round(count($array) / 2); 
                $total = $array[$middle-1]; 
            break; 
            case 'mode': 
                $v = array_count_values($array); 
                arsort($v); 
                foreach($v as $k => $v){$total = $k; break;} 
            break; 
            case 'range': 
                sort($array); 
                $sml = $array[0]; 
                rsort($array); 
                $lrg = $array[0]; 
                $total = $lrg - $sml; 
            break; 
        } 
        return $total; 
    } 
} 

===============================================================================

Send two arrays and get an array with the operation A-B, elements on A
that are not included on B

// Input: {2,4,3}, {2}
// Output: {4,3}

<?php 
function RestaDeArrays($vectorA,$vectorB) 
         { 
           $cantA=count($vectorA); 
           $cantB=count($vectorB); 
           $No_saca=0; 
           for($i=0;$i<$cantA;$i++) 
                { 
                 for($j=0;$j<$cantB;$j++) 
                      { 
                       if($vectorA[$i]==$vectorB[$j]) 
                           $No_saca=1; 
                      } 

                 if($No_saca==0) 
                    $nuevo_array[]=$vectorA[$i]; 
                   else 
                   $No_saca=0; 
                } 

           return $nuevo_array; 
         } 

?> 

===============================================================================
